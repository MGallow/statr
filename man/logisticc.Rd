% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{logisticc}
\alias{logisticc}
\title{Logistic Regression (c++)}
\usage{
logisticc(X, y, lam = 0, alpha = 1.5, penalty = "none",
  intercept = TRUE, method = "IRLS", tol = 1e-05, maxit = 1e+05,
  vec = 0L, init = 0L)
}
\arguments{
\item{X}{matrix}

\item{y}{matrix or vector of response values 0,1}

\item{lam}{optional tuning parameter for ridge regularization term. Defaults to `lam = 0`}

\item{alpha}{optional tuning parameter for bridge regularization term. Defaults to 'alpha = 1.5'}

\item{penalty}{choose from c('none', 'ridge', 'bridge'). Defaults to 'none'}

\item{intercept}{Defaults to TRUE}

\item{method}{optimization algorithm. Choose from 'IRLS' or 'MM'. Defaults to 'IRLS'}

\item{tol}{tolerance - used to determine algorithm convergence. Defaults to 1e-5}

\item{maxit}{maximum iterations. Defaults to 1e5}

\item{vec}{optional vector to specify which coefficients will be penalized}

\item{init}{optional initialization for MM algorithm}
}
\value{
returns beta estimates (includes intercept), total iterations, and gradients.
}
\description{
Computes the coefficient estimates for logistic regression. ridge regularization and bridge regularization optional.
}
\examples{
Logistic Regression
library(dplyr)
X = as.matrix(dplyr::select(iris, -Species))
y = as.matrix(dplyr::select(iris, Species))
y = ifelse(y == 'setosa', 1, 0)
logisticc(X, y, vec = c(0,1,1,1))

ridge Logistic Regression with IRLS
logisticc(X, y, lam = 0.1, penalty = 'ridge', vec = c(0,1,1,1))

ridge Logistic Regression with MM
logisticc(X, y, lam = 0.1, penalty = 'ridge', method = 'MM', vec = c(0,1,1,1))

bridge Logistic Regression
logisticc(X, y, lam = 0.1, alpha = 1.5, penalty = 'bridge', method = "MM", vec = c(0,1,1,1))

}
